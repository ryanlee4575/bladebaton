import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Avatar, AvatarContent, AvatarFallback } from "@/components/ui/avatar";
import { Badge } from "@/components/ui/badge";
import { Trophy, Sword } from "lucide-react";

const weaponColors = {
  foil: "bg-blue-100 text-blue-800",
  epee: "bg-purple-100 text-purple-800", 
  sabre: "bg-red-100 text-red-800"
};

export default function TopFencers({ fencers }) {
  const topFencers = fencers
    ?.sort((a, b) => {
      const aWinRate = a.wins / Math.max(a.wins + a.losses, 1);
      const bWinRate = b.wins / Math.max(b.wins + b.losses, 1);
      return bWinRate - aWinRate;
    })
    .slice(0, 5) || [];

  return (
    <Card className="shadow-lg border-0">
      <CardHeader className="border-b border-slate-100">
        <CardTitle className="flex items-center gap-2 text-slate-900">
          <Trophy className="w-5 h-5 text-amber-600" />
          Top Performers
        </CardTitle>
      </CardHeader>
      <CardContent className="p-0">
        {topFencers.length === 0 ? (
          <div className="p-8 text-center text-slate-500">
            <Sword className="w-12 h-12 mx-auto mb-4 text-slate-300" />
            <p className="text-lg font-medium">No fencers yet</p>
            <p className="text-sm">Recruit your first athlete to get started</p>
          </div>
        ) : (
          <div className="divide-y divide-slate-100">
            {topFencers.map((fencer, index) => {
              const winRate = ((fencer.wins / Math.max(fencer.wins + fencer.losses, 1)) * 100);
              
              return (
                <div key={fencer.id} className="p-4 hover:bg-slate-50 transition-colors duration-200">
                  <div className="flex items-center gap-4">
                    <div className="relative">
                      <Avatar className="w-10 h-10">
                        <AvatarFallback className="bg-gradient-to-r from-amber-400 to-amber-500 text-white font-bold">
                          {fencer.name.split(' ').map(n => n[0]).join('')}
                        </AvatarFallback>
                      </Avatar>
                      {index < 3 && (
                        <div className={`absolute -top-1 -right-1 w-4 h-4 rounded-full flex items-center justify-center text-xs font-bold text-white ${
                          index === 0 ? 'bg-amber-500' : index === 1 ? 'bg-slate-400' : 'bg-orange-500'
                        }`}>
                          {index + 1}
                        </div>
                      )}
                    </div>
                    
                    <div className="flex-1">
                      <div className="flex items-center gap-2 mb-1">
                        <h4 className="font-semibold text-slate-900">{fencer.name}</h4>
                        <Badge variant="secondary" className={weaponColors[fencer.weapon]}>
                          {fencer.weapon}
                        </Badge>
 
