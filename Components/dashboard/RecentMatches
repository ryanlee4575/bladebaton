import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Calendar, MapPin } from "lucide-react";
import { format } from "date-fns";

export default function RecentMatches({ matches }) {
  const recentMatches = matches?.slice(0, 5) || [];

  return (
    <Card className="shadow-lg border-0">
      <CardHeader className="border-b border-slate-100">
        <CardTitle className="flex items-center gap-2 text-slate-900">
          <Calendar className="w-5 h-5 text-amber-600" />
          Recent Matches
        </CardTitle>
      </CardHeader>
      <CardContent className="p-0">
        {recentMatches.length === 0 ? (
          <div className="p-8 text-center text-slate-500">
            <Calendar className="w-12 h-12 mx-auto mb-4 text-slate-300" />
            <p className="text-lg font-medium">No matches yet</p>
            <p className="text-sm">Schedule your first competition to get started</p>
          </div>
        ) : (
          <div className="divide-y divide-slate-100">
            {recentMatches.map((match) => (
              <div key={match.id} className="p-4 hover:bg-slate-50 transition-colors duration-200">
                <div className="flex items-center justify-between">
                  <div>
                    <h4 className="font-semibold text-slate-900">{match.opponent}</h4>
                    <div className="flex items-center gap-4 mt-1">
                      <div className="flex items-center gap-1 text-sm text-slate-600">
                        <Calendar className="w-3 h-3" />
                        {format(new Date(match.date), "MMM d, yyyy")}
                      </div>
                      <div className="flex items-center gap-1 text-sm text-slate-600">
                        <MapPin className="w-3 h-3" />
                        {match.venue}
                      </div>
                    </div>
                  </div>
                  <div className="text-right">
                    <Badge 
                      variant={match.status === 'completed' ? 'default' : 'secondary'}
                      className={`mb-1 ${
                        match.status === 'completed' 
                          ? match.results?.overall_result === 'win' 
                            ? 'bg-emerald-100 text-emerald-800' 
                            : 'bg-red-100 text-red-800'
                          : 'bg-amber-100 text-amber-800'
                      }`}
                    >
                      {match.status === 'completed' ? match.results?.overall_result || 'Completed' : 'Scheduled'}
                    </Badge>
                    {match.results?.final_score && (
                      <p className="text-sm font-mono text-slate-700">{match.results.final_score}</p>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}
      </CardContent>
 
